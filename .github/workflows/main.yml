name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build backend
        working-directory: ./lab1/backend
        run: mvn clean package -DskipTests

      - name: Set up Node JS
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./lab1/frontend
        run: npm install

      - name: Build frontend
        working-directory: ./lab1/frontend
        run: npm run build

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Test backend
        working-directory: ./lab1/backend
        run: mvn test

      - name: Install frontend dependencies
        working-directory: ./lab1/frontend
        run: npm install

      - name: Test frontend with coverage
        working-directory: ./lab1/frontend
        run: npm test -- --watchAll=false --coverage --coverageReporters=lcov

      - name: Upload Backend Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: lab1/backend/target/site/jacoco/jacoco.xml

      - name: Upload Frontend Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: lab1/frontend/coverage/lcov.info
    
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: sonar_qube
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
     
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./lab1/backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/itmo-devops-library-backend-vl:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./lab1/frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/itmo-devops-library-frontend-vl:latest

  sonar_qube:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download backend coverage
        uses: actions/download-artifact@v4
        with:
          name: backend-coverage
          path: lab1/backend/target/site/jacoco
      
      - name: Download frontend coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage
          path: lab1/frontend/coverage

      - name: Build with Maven
        working-directory: ./lab1/backend
        run: mvn clean verify

      - name: Backend SonarCloud Scan
        working-directory: ./lab1/backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=chetter14_devops \
            -Dsonar.organization=chetter14 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Frontend SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
