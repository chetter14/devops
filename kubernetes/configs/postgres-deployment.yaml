apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /snap/kompose/19/kompose-linux-amd64 convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/devops_network: "true"
        io.kompose.service: postgres
    spec:
      containers:
      - args:
        - postgres
        - -c
        - max_connections=1000
        - -c
        - shared_buffers=256MB
        - -c
        - effective_cache_size=768MB
        - -c
        - maintenance_work_mem=64MB
        - -c
        - checkpoint_completion_target=0.7
        - -c
        - wal_buffers=16MB
        - -c
        - default_statistics_target=100
        env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_DB
          value: library
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        image: postgres:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - pg_isready -U postgres -d library
          failureThreshold: 5
          periodSeconds: 30
          timeoutSeconds: 10
        name: postgres-container
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 500m
            memory: "536870912"
          requests:
            cpu: 250m
            memory: "268435456"
        stdin: true
        tty: true
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/pgdata
          name: postgres-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: postgres-claim0
        persistentVolumeClaim:
          claimName: postgres-claim0
status: {}